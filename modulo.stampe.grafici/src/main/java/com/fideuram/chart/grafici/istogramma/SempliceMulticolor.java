package com.fideuram.chart.grafici.istogramma;

import com.fideuram.chart.Chart;
import com.fideuram.chart.configuration.Colore;
import com.fideuram.chart.configuration.Configurazione;
import com.fideuram.chart.configuration.Gruppo;
import com.fideuram.chart.grafici.istogramma.bean.BarElement;
import com.fideuram.chart.grafici.istogramma.bean.Istogramma;
import com.fideuram.utils.Streamer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.AxisLocation;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.CategoryLabelPositions;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.labels.ItemLabelAnchor;
import org.jfree.chart.labels.ItemLabelPosition;
import org.jfree.chart.labels.StandardCategoryItemLabelGenerator;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.renderer.category.BarRenderer;
import org.jfree.chart.renderer.category.StandardBarPainter;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.ui.TextAnchor;

import java.awt.*;
import java.io.File;
import java.io.IOException;
import java.util.List;

/**
 * Created with
 * User: logan
 * Date: 16/07/13
 * Time: 22.51
 */
public class SempliceMulticolor extends Chart {


    public SempliceMulticolor() {
        super();
    }

    public byte[] generate(Istogramma fagiolo) throws IOException {
        DefaultCategoryDataset cds=getDataset(fagiolo);

        fixBaseToZero(); //imposto il range base a zero

        JFreeChart chart = ChartFactory.createBarChart(fagiolo.getHeader(),
                fagiolo.getXaxis(),                              // domain axis label
                fagiolo.getYaxis(),                              // range axis label
                cds,                                             // data
                fagiolo.getConfigurazione().getOrientation(),    // orientation
                fagiolo.getConfigurazione().isLegenda(),         // Show legend
                fagiolo.getConfigurazione().isTooltip(),         // tooltips?
                false                                            // URLs?
        );


        //applyChartTheme(chart);

        CategoryPlot plot = chart.getCategoryPlot();
        //plot.setNoDataMessage("NO DATA!");

        BarRenderer renderer = new CustomRender(getPaints(fagiolo));


        renderer.setItemLabelsVisible(true);
        final ItemLabelPosition p = new ItemLabelPosition(
                ItemLabelAnchor.CENTER, TextAnchor.CENTER, TextAnchor.CENTER, 0.0
        );
        renderer.setPositiveItemLabelPosition(p);

        if(fagiolo.getConfigurazione().isAutogeneratelabel())
            renderer.setBaseItemLabelGenerator(new StandardCategoryItemLabelGenerator());

        if(!fagiolo.getConfigurazione().isOmbra())
            renderer.setShadowVisible(false);

        if(fagiolo.getConfigurazione().isFlat2dGraph())
            renderer.setBarPainter(new StandardBarPainter());

        if(fagiolo.getConfigurazione().isFontObliquo()){
            CategoryAxis xAxis = (CategoryAxis)plot.getDomainAxis();
            xAxis.setCategoryLabelPositions(CategoryLabelPositions.UP_45);
        }

        plot.setDomainAxisLocation(AxisLocation.BOTTOM_OR_LEFT);
        plot.setRangeGridlinePaint(Color.gray);
        plot.setRenderer(renderer);
        plot.setBackgroundPaint(fagiolo.getConfigurazione().getBackColor().getColor());

        NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();

        rangeAxis.setRange(xminimo, xmassimo);

        String s = temporaryDirecotry + getAutoGeneratedFileName() + "IstogrmmaSempliceMulticolor.png";
        saveChart(chart, temporaryDirecotry, getAutoGeneratedFileName()+ "IstogrmmaSempliceMulticolor", fagiolo.getConfigurazione().getxPixelDimension(), fagiolo.getConfigurazione().getyPixelDimension());

        byte[] stream = Streamer.getFile(s);
        new File(s).delete();
        return stream;
    }

    /**
     *
     * @param fagiolo
     * @return
     */
    private DefaultCategoryDataset getDataset(Istogramma fagiolo){
        DefaultCategoryDataset cds=new DefaultCategoryDataset();
        List<BarElement> lista = fagiolo.getBarElements();
        for(int i=0; i<lista.size();i++){
            BarElement b= lista.get(i);
            cds.addValue(b.getValore(),fagiolo.getYaxis(),b.getAnno());
            if(i==0){
                xminimo=b.getValore();
                xmassimo=b.getValore();
            }else{
                if(b.getValore()<xminimo){
                    xminimo=b.getValore();
                }else if(b.getValore()>xmassimo){
                    xmassimo=b.getValore();
                }
            }
        }

        configureMargini(fagiolo.getConfigurazione());
       /* if(xmassimo<0)
            xmassimo=0.0;*/
     /*   if(Configurazione.ORIENTATION_ORIZZONTALE==fagiolo.getConfigurazione().getOrientationToIntValue()){
            xminimo=xminimo+(xminimo*fagiolo.getConfigurazione().getPercentualeUpDowngridRange()/100);
        }else{
            xminimo=xminimo-(xminimo*fagiolo.getConfigurazione().getPercentualeUpDowngridRange()/100);
        }
        xmassimo=xmassimo + (xmassimo*fagiolo.getConfigurazione().getPercentualeUpDowngridRange()/100);*/
        return cds;
    }


    private Paint[] getPaints(Istogramma fagiolo){
           Paint[] paints = new Paint[fagiolo.getBarElements().size()];
           if(fagiolo.getConfigurazione().isAlarmed()){
               for (int i=0; i<fagiolo.getBarElements().size();i++){
                     if(fagiolo.getBarElements().get(i).getValore()>0){
                         paints[i]= new Color(110,139,61);   //Color.green;
                     }else {
                         paints[i]= new Color(139,62,47);     //Color.red;
                     }
               }
           }else{
               for (int i=0; i<fagiolo.getBarElements().size();i++){
                       paints[i]= fagiolo.getBarElements().get(i).getGroup().getColore().getColor();
               }
           }
           return paints;
    }




}

