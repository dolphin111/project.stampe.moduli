package com.fideuram.chart.grafici.torta;

import com.fideuram.chart.Chart;
import com.fideuram.chart.configuration.Configurazione;
import com.fideuram.chart.grafici.torta.bean.Fetta;
import com.fideuram.chart.grafici.torta.bean.Torta;
import com.fideuram.chart.mock.generici.torta.TortaGenerica;
import com.fideuram.utils.LoggingUtils;
import com.fideuram.utils.Streamer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.block.BlockBorder;
import org.jfree.chart.block.LabelBlock;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.title.LegendTitle;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.ui.RectangleEdge;
import org.jfree.ui.RectangleInsets;

import javax.security.auth.login.Configuration;
import java.awt.*;
import java.io.File;
import java.io.IOException;
import java.util.List;


/**
 * Created by
 * User: logan
 * Date: 22/05/12
 * Time: 10.34
 */

public class TortaChartEngine extends Chart {


    public TortaChartEngine() {
        super();
    }



    public byte[] generate(Torta torta) throws IOException {
        Configurazione configurazione=torta.getConfigurazione();
        DefaultPieDataset pieDataset = new DefaultPieDataset();
        List<Fetta> fettine = torta.getFettas();
        for (int i=0;i<fettine.size();i++){
            Fetta fetta =  fettine.get(i);
            pieDataset.setValue(fetta.getEtichetta(), fetta.getValore());
        }
        JFreeChart chart;
        if(configurazione.is_3D()){
               chart = ChartFactory.createPieChart3D( torta.getHeader(),
                       pieDataset,
                       torta.getConfigurazione().isLegenda(),
                       torta.getConfigurazione().isTooltip(),         // tooltips?
                       false);
        }else{
                chart = ChartFactory.createPieChart(torta.getHeader(),
                       pieDataset,
                       torta.getConfigurazione().isLegenda(),         // Show legend
                       torta.getConfigurazione().isTooltip(),         // tooltips?
                        false);
        }
        //chart.setBackgroundPaint(getPaint());    //aggiunge il gradiente sfumato grigio in backgraund
        PiePlot plot = (PiePlot) chart.getPlot();
        plot.setBackgroundPaint(Color.WHITE);
        //plot.setLabelFont(new Font("SansSerif", Font.PLAIN, 8));
        plot.setLabelFont(new Font("SansSerif", Font.PLAIN, configurazione.getFontSize()));
        if(torta.getConfigurazione().isLegenda())
          plot.setLabelGenerator(null);    //commentare questa riga se si vuole rivedere le label stile tooltip

        overrideColors(chart, fettine);  //cambio il colore dei section

        String s = temporaryDirecotry + getAutoGeneratedFileName() + ".png";
        ChartUtilities.saveChartAsPNG(new File(s), chart, configurazione.getxPixelDimension(), configurazione.getyPixelDimension());
        byte[] stream = Streamer.getFile(s);
        new File(s).delete();
        LoggingUtils.info(s + "DELETED");
        return stream;
    }

    /**
     * Usare questo metodo per l'override dei colori di ciascuna fetta  della torta
     * @param chart
     * @param fettine
     */
    protected void overrideColors(JFreeChart chart,  List<Fetta> fettine){
        PiePlot plot = (PiePlot) chart.getPlot();
        for (int i=0;i<fettine.size();i++){
            Fetta fetta =  fettine.get(i);
            if(fetta.getColore()!=null){
                plot.setSectionPaint(fetta.getEtichetta(), fetta.getColore().getColor());
            }
        }
    }

    public static void main(String[] args) {
        Configurazione c = new Configurazione();

        c.setxPixelDimension(800);
        c.setyPixelDimension(450);
        c.setValoriOverTheeTop(true);
        c.setLegenda(true);
        c.setTooltip(true);
        Torta torta =  TortaGenerica.getMock();
        torta.setConfigurazione(c);
        try {
            new TortaChartEngine().generate(torta);
        } catch (IOException e) {
            e.printStackTrace();
        }

    }
    

}
