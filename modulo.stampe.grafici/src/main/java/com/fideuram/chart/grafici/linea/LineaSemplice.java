package com.fideuram.chart.grafici.linea;

import com.fideuram.chart.Chart;

import com.fideuram.chart.grafici.linea.bean.Linea;
import com.fideuram.chart.grafici.linea.bean.Punto;
import com.fideuram.utils.Streamer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.*;
import org.jfree.chart.plot.*;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.data.category.DefaultCategoryDataset;

import java.awt.*;
import java.awt.geom.Ellipse2D;
import java.io.File;
import java.io.IOException;
import java.util.ArrayList;

/**
 * Created with
 * User: logan
 * Date: 29/07/13
 * Time: 12.14
 */
public class LineaSemplice extends Chart {
    DefaultCategoryDataset dataset;

    public LineaSemplice() {
        super();
    }

    public  byte[] generate(Linea linea)throws IOException {
        configurazione=linea.getConfigurazione();
        dataset  = new DefaultCategoryDataset();
        setDataset(linea);
        CategoryAxis xAxis = new CategoryAxis(linea.getXaxis());
        if(linea.getConfigurazione().isFontObliquo()){
            xAxis.setCategoryLabelPositions(CategoryLabelPositions.UP_45);
        }

        NumberAxis yAxis = new NumberAxis(linea.getYaxis());
        if(configurazione.getTickGrid()!=null)
           yAxis.setTickUnit(new NumberTickUnit(configurazione.getTickGrid()));
        LineAndShapeRenderer renderer = new LineAndShapeRenderer();
//        renderer.setDrawOutlines(true);
//        renderer.setUseOutlinePaint(true);
        renderer.setSeriesPaint(0, linea.getColore().getColor());
        renderer.setSeriesOutlinePaint(0, linea.getColore().getColor());
        renderer.setSeriesShape(0, new Ellipse2D.Double(-3, -3, 6, 6));
        if(!configurazione.isEvidenziaIlPunto())
            renderer.setBaseShapesVisible(false);
        //renderer.setSeriesShape(0, new Rectangle2D.Double(-3, -3, 5, 5));
        CategoryPlot plot = new CategoryPlot(dataset, xAxis, yAxis, renderer);


        NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
        rangeAxis.setRange(xminimo, xmassimo);
        JFreeChart chart = new JFreeChart("",
                                          new Font("Arial", Font.PLAIN, 18),
                                          plot,
                                          true);


        chart.removeLegend();
        chart.setBackgroundPaint(linea.getConfigurazione().getBackColor().getColor());
        chart.setTitle(linea.getHeader());

        String s = temporaryDirecotry + getAutoGeneratedFileName() + ".png";
        saveChart(chart, temporaryDirecotry, getAutoGeneratedFileName(), linea.getConfigurazione().getxPixelDimension(), linea.getConfigurazione().getyPixelDimension());
        byte[] stream = Streamer.getFile(s);
        new File(s).delete();
        return stream;
    }

    @Deprecated
    public byte[] generateToDelete(Linea linea) throws IOException {
        dataset  = new DefaultCategoryDataset();
        setDataset(linea);
        JFreeChart chart= ChartFactory.createLineChart(
                linea.getHeader(),
                linea.getXaxis(),
                linea.getYaxis(),
                dataset,
                linea.getConfigurazione().getOrientation(),
                linea.getConfigurazione().isLegenda(),         // Show legend
                linea.getConfigurazione().isTooltip(),         // tooltips?
                false);



        CategoryPlot plot = (CategoryPlot) chart.getPlot();



        plot.setRangeGridlinePaint(linea.getConfigurazione().getGridColor().getColor());



        NumberAxis rangeAxis = (NumberAxis) plot.getRangeAxis();
        rangeAxis.setRange(xminimo, xmassimo);


        CategoryAxis xaxis = (CategoryAxis) plot.getDomainAxis();
        Stroke stroke = new  BasicStroke(3.0f);
        xaxis.setTickMarkStroke(stroke);
        //xaxis.setLabelFont(new Font(Font.SANS_SERIF,Font.PLAIN,linea.getConfigurazione().getFontSize()));
        //xaxis.setTickLabelFont(new Font(Font.SANS_SERIF,Font.PLAIN,linea.getConfigurazione().getFontSize()));
        if(linea.getConfigurazione().isFontObliquo()){
            xaxis.setCategoryLabelPositions(CategoryLabelPositions.UP_45);
        }

        plot.setBackgroundPaint(linea.getConfigurazione().getBackColor().getColor());
        plot.getRenderer().setSeriesPaint(0,linea.getColore().getColor());

        //plot.getRenderer().setSeriesOutlineStroke(0,stroke);   //todo non funziona

        String s = temporaryDirecotry + getAutoGeneratedFileName() + ".png";
        saveChart(chart, temporaryDirecotry, getAutoGeneratedFileName(), linea.getConfigurazione().getxPixelDimension(), linea.getConfigurazione().getyPixelDimension());

        byte[] stream = Streamer.getFile(s);
        new File(s).delete();
        return stream;

    }


    protected   void setDataset(Linea linea){
        ArrayList<Punto> punti = (ArrayList<Punto>) linea.getPunti();
        for(int i=0; i<punti.size();i++){
            Punto p =  punti.get(i);

            dataset.addValue(p.getValore(),"",p.dateToString());
            //dataset.addValue(p.getValore(),"",p.getData());

            if(i==0){
                xminimo=p.getValore();
                xmassimo=p.getValore();
            }else{
                if(p.getValore()<xminimo){
                    xminimo=p.getValore();
                }else if(p.getValore()>xmassimo){
                    xmassimo=p.getValore();
                }
            }
        }

        configureMargini(linea.getConfigurazione());
    }



}
