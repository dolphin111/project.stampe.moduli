package com.fideuram.chart.grafici.linea;

import com.fideuram.chart.Chart;
import com.fideuram.chart.configuration.Colore;
import com.fideuram.chart.configuration.Configurazione;
import com.fideuram.chart.grafici.linea.bean.Linea;
import com.fideuram.chart.grafici.linea.bean.LineeChart;
import com.fideuram.chart.grafici.linea.bean.Punto;
import com.fideuram.chart.lab.line.bean.PuntoLinea;
import com.fideuram.utils.Streamer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.axis.CategoryAxis;
import org.jfree.chart.axis.DateAxis;
import org.jfree.chart.axis.NumberAxis;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.XYPlot;
import org.jfree.chart.renderer.category.LineAndShapeRenderer;
import org.jfree.chart.renderer.xy.XYItemRenderer;
import org.jfree.chart.renderer.xy.XYLineAndShapeRenderer;
import org.jfree.chart.title.LegendTitle;
import org.jfree.data.category.DefaultCategoryDataset;
import org.jfree.data.time.Month;
import org.jfree.data.time.TimeSeries;
import org.jfree.data.time.TimeSeriesCollection;
import org.jfree.data.xy.XYDataset;

import java.awt.*;
import java.awt.geom.Ellipse2D;
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import java.util.List;

/**
 * Created
 * User: V801068
 * Date: 15/01/14
 * Time: 14.19
 */
public class LineaMultipla extends Chart{
    TimeSeriesCollection dataset;
    Configurazione configurazione;


    public  byte[] generate(LineeChart lineee)throws IOException {
          configurazione=lineee.getConfigurazione();
          return generate(lineee.getLinee());
    }

    public  byte[] generate(List<Linea> lineee)throws IOException {
        if(configurazione==null)
            configurazione=new Configurazione();
        if(lineee.size()>0)
            setDataset(lineee);
        JFreeChart chart = ChartFactory.createTimeSeriesChart(
                "",                         //titolo
                "",                         //y-label
                "",                         //x-label
                dataset,
                true,                       // Show legend
                false,
                false);
        applyChartTheme(chart);
        XYPlot plot = chart.getXYPlot();
        DateAxis axis = (DateAxis) plot.getDomainAxis();

        //GESTIONE COLORI
        chart.setBackgroundPaint(getPaint());
        plot.setBackgroundPaint(getPaint());
        //Colore cbase =configurationBar.getColori().getBackGroundColor();
        //Colore cgrid =configurationBar.getColori().getBackGroundColor();
        //plot.setBackgroundPaint(new Color(cbase.getR(),cbase.getG(),cbase.getB()));
        //plot.setRangeGridlinePaint(new Color(cgrid.getR(),cgrid.getG(),cgrid.getB()));

        if(configurazione.getFontTitolo()!=null){
            LegendTitle legendTitle = chart.getLegend();
            legendTitle.setItemFont(configurazione.getFontTitolo());
            legendTitle.setNotify(true);
        }

        XYItemRenderer r = plot.getRenderer();
        XYLineAndShapeRenderer renderer = (XYLineAndShapeRenderer) r;
        renderer.setBaseShapesVisible(true);
        renderer.setBaseShapesFilled(true);
        for (int i=0; i<lineee.size();i++){
        if(r instanceof XYLineAndShapeRenderer) {
                renderer.setSeriesPaint(i, lineee.get(i).getColore().getColor());

            }
        }
        axis.setDateFormatOverride(new SimpleDateFormat("MMM-yy"));
        //axis.setDateFormatOverride(new SimpleDateFormat("MMM"));
        //axis.setDateFormatOverride(new SimpleDateFormat("dd-MMM"));
        //axis.setDateFormatOverride(new SimpleDateFormat("dd-MM-yy"));

        String s = temporaryDirecotry + getAutoGeneratedFileName() + ".png";
        try {
            //saveChart(chart, temporaryDirecotry, getAutoGeneratedFileName(), 500, 300);
            saveChart(chart, temporaryDirecotry, getAutoGeneratedFileName(),  configurazione.getxPixelDimension(), configurazione.getyPixelDimension());
        } catch (IOException e) {
            System.err.println("Problem occurred creating chart.");
        }

        byte[] stream = Streamer.getFile(s);
        new File(s).delete();
        return stream;
    }


    private void setDataset(List<Linea> lineee){
        dataset = new TimeSeriesCollection();
        Linea linea0=lineee.get(0);

        for (int i=0; i<lineee.size();i++){
            Linea linea=lineee.get(i);
            //TimeSeries ts  = new TimeSeries(linea.getIntestazione());
            TimeSeries ts  = new TimeSeries(linea.getHeader());
            for (int y=0; y<linea.getPunti().size();y++){
                Punto p =linea.getPunti().get(y);
                ts.add(new Month(p.getMese(),p.getAnno()),p.getValore());
            }
            dataset.addSeries(ts);
        }
    }



    public static void main(String args[]) throws Exception {

        List<Linea> linee=new ArrayList<Linea>();

        Linea linea = new Linea();
        //linea.setIntestazione("nero");
        linea.setColore(new Colore(80,170,150));
        linea.addPunto(new Punto(12,2011, new Double(4.50)));
        linea.addPunto(new Punto(1,2012,  new Double(4.40)));
        linea.addPunto(new Punto(2,2012,  new Double(4.30)));
        linea.addPunto(new Punto(3,2012,  new Double(4.20)));
        linea.addPunto(new Punto(4,2012,  new Double(4.10)));
        linee.add(linea);


        Linea l = new Linea();
        //l.setIntestazione("blu");
        l.setColore(new Colore(51,51,51));
        l.addPunto(new Punto(12,2011, new Double(2.50)));
        l.addPunto(new Punto(1,2012,  new Double(2.60)));
        l.addPunto(new Punto(2,2012,  new Double(2.70)));
        l.addPunto(new Punto(3,2012,  new Double(2.80)));
        l.addPunto(new Punto(4,2012,  new Double(2.90)));


        linee.add(l);
        byte[] grafico= new LineaMultipla().generate(linee);
        Streamer.saveToFile(grafico,"C:/Stampe/out/tmp/","lineamultipla.png");
    }
}
