package com.fideuram.chart.grafici.torta;

import com.fideuram.chart.configuration.Colore;
import com.fideuram.chart.configuration.Configurazione;
import com.fideuram.chart.grafici.torta.bean.Fetta;
import com.fideuram.chart.grafici.torta.bean.Torta;
import com.fideuram.chart.mock.generici.torta.TortaGenerica;
import com.fideuram.utils.LoggingUtils;
import com.fideuram.utils.Streamer;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartUtilities;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.block.BlockBorder;
import org.jfree.chart.block.RectangleConstraint;
import org.jfree.chart.labels.StandardPieSectionLabelGenerator;
import org.jfree.chart.plot.PieLabelLinkStyle;
import org.jfree.chart.plot.PiePlot;
import org.jfree.chart.title.LegendTitle;
import org.jfree.data.general.DefaultPieDataset;
import org.jfree.ui.RectangleEdge;
import org.jfree.ui.RectangleInsets;

import java.awt.*;
import java.io.File;
import java.io.IOException;
import java.util.*;

/**
 * Created with IntelliJ IDEA.
 * User: V801068
 * Date: 16/03/15
 * Time: 14.04
 */
public class TortaFondiCustom extends TortaChartEngine{

    public static void main(String[] args) {
        Configurazione c = new Configurazione();
        c.setFontLabelColor(new Colore(146,144,132));
        c.setFontLabels("Helvetica",11);
        c.setxPixelDimension(800);
        c.setyPixelDimension(450);
        c.setValoriOverTheeTop(true);
        c.setValoriOverTheeTopSymbolPercent(true);
        c.setLegenda(true);
        c.setTooltip(true);
        Torta torta =  TortaGenerica.getMock();
        torta.setConfigurazione(c);
        try {
            new TortaFondiCustom().generate(torta);
        } catch (IOException e) {
            e.printStackTrace();
        }

    }

    @Override
    public  byte[] generate(Torta torta)throws IOException {

        Configurazione configurazione=torta.getConfigurazione();

        Font fontina =  configurazione.getFontLabels();

        DefaultPieDataset pieDataset = new DefaultPieDataset();
        java.util.List<Fetta> fettine = torta.getFettas();
        for (int i=0;i<fettine.size();i++){
            Fetta fetta =  fettine.get(i);
            pieDataset.setValue(fetta.getEtichetta(), fetta.getValore());
        }
        JFreeChart chart;

        chart = ChartFactory.createPieChart(torta.getHeader(),
                pieDataset,
                true,         // Show legend
                false,         // tooltips?
                false);


        //chart.setBackgroundPaint(getPaint());    //aggiunge il gradiente sfumato grigio in backgraund
        PiePlot plot = (PiePlot) chart.getPlot();
        plot.setBackgroundPaint(Color.WHITE);
        plot.setLabelFont(fontina);
        plot.setLabelPaint(configurazione.getFontLabelColor().getColor());

        plot.setLabelOutlinePaint(new Color(255,255,255));
        plot.setLabelShadowPaint(new Color(255, 255, 255));
        plot.setLabelLinkStyle(PieLabelLinkStyle.STANDARD);
        plot.setLabelBackgroundPaint(new Color(248,248,255));




        if(torta.getConfigurazione().isValoriOverTheeTop()&&torta.getConfigurazione().isValoriOverTheeTopSymbolPercent()){
            //plot.setLabelGenerator(new StandardPieSectionLabelGenerator("{1}:{2}"));
            plot.setLabelGenerator(new StandardPieSectionLabelGenerator("{1}%"));
        }else if(torta.getConfigurazione().isValoriOverTheeTop()){
            plot.setLabelGenerator(new StandardPieSectionLabelGenerator("{1}"));
        }else{
            plot.setLabelGenerator(null);    //commentare questa riga se si vuole rivedere le label stile tooltip
        }
        // indicazione delle percentuali over the top
        plot.setLabelBackgroundPaint(Color.WHITE);
        plot.setLegendLabelGenerator(new StandardPieSectionLabelGenerator("{0}"));

        // tolgo l'ombra
        plot.setShadowPaint(Color.WHITE);

        // Tolgo la cornice al grafico
        plot.setOutlineVisible(false); //questo elimin la cornice del grafico

        // Elimino il contorno alle fettine della torta (in reata lo color di bianco)
        plot.setBaseSectionOutlinePaint(Color.WHITE);



        LegendTitle legend = chart.getLegend();
        legend.setItemFont(fontina);
        legend.setItemPaint(configurazione.getFontLabelColor().getColor());
        legend.setPadding(0.00,20.00,0.00,20.00);


        //SET DELLA POSIZIONE
        //legend.setPosition(RectangleEdge.RIGHT);
        //legend.setBorder(0.00,0.00,0.00,0.00);

        legend.setPosition(RectangleEdge.BOTTOM);
        legend.setBorder(0.00,0.00,0.00,0.00);

        overrideColors(chart, fettine);  //cambio il colore dei section

        String s = temporaryDirecotry + getAutoGeneratedFileName() + ".png";
        ChartUtilities.saveChartAsPNG(new File(s), chart, configurazione.getxPixelDimension(), configurazione.getyPixelDimension());
        byte[] stream = Streamer.getFile(s);
        //new File(s).delete();
        LoggingUtils.info(s + "DELETED");
        return stream;

    }
}
